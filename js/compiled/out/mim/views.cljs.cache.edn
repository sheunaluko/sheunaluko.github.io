{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name mim.views, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, ws mim.ws, mim.ws mim.ws, re-com re-com.core, re-com.core re-com.core}, :uses nil, :defs {log {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/views.cljs", :line 9, :column 7, :end-line 9, :end-column 10, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mim.views/log, :variadic true, :file "src/cljs/mim/views.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, set-ui {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/views.cljs", :line 14, :column 7, :end-line 14, :end-column 13, :arglists (quote ([msg]))}, :name mim.views/set-ui, :variadic false, :file "src/cljs/mim/views.cljs", :end-column 13, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, title {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/views.cljs", :line 19, :column 7, :end-line 19, :end-column 12, :arglists (quote ([]))}, :name mim.views/title, :variadic false, :file "src/cljs/mim/views.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, my-canvas {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/views.cljs", :line 24, :column 7, :end-line 24, :end-column 16, :arglists (quote ([]))}, :name mim.views/my-canvas, :variadic false, :file "src/cljs/mim/views.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main-area {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/views.cljs", :line 33, :column 7, :end-line 33, :end-column 16, :arglists (quote ([]))}, :name mim.views/main-area, :variadic false, :file "src/cljs/mim/views.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, my-button {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/views.cljs", :line 43, :column 7, :end-line 43, :end-column 16, :arglists (quote ([label click]))}, :name mim.views/my-button, :variadic false, :file "src/cljs/mim/views.cljs", :end-column 16, :method-params ([label click]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([label click]))}, bottom-panel {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/views.cljs", :line 54, :column 7, :end-line 54, :end-column 19, :arglists (quote ([]))}, :name mim.views/bottom-panel, :variadic false, :file "src/cljs/mim/views.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main-panel {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/views.cljs", :line 96, :column 7, :end-line 96, :end-column 17, :arglists (quote ([]))}, :name mim.views/main-panel, :variadic false, :file "src/cljs/mim/views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:children :color :level3 :justify :margin-left :background-color :margin-top :width :padding-right :on-click :size :center :style :level :padding-left :label :id :svg :child :margin-bottom :level1 :height :attr}, :order [:label :level :level1 :size :height :width :attr :id :child :svg :style :margin-top :margin-left :on-click :justify :center :margin-bottom :level3 :padding-left :padding-right :background-color :children :color]}, :doc nil}