{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name mim.core, :imports nil, :requires {mim.ws mim.ws, reagent reagent.core, views mim.views, reagent.core reagent.core, ws mim.ws, mim.config mim.config, mim.events mim.events, config mim.config, mim.subs mim.subs, mim.views mim.views, mim.touch-stuff mim.touch-stuff, touch mim.touch-stuff, re-frame re-frame.core, re-frame.core re-frame.core}, :uses nil, :defs {dev-setup {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/core.cljs", :line 14, :column 7, :end-line 14, :end-column 16, :arglists (quote ([]))}, :name mim.core/dev-setup, :variadic false, :file "src/cljs/mim/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mount-root {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/core.cljs", :line 19, :column 7, :end-line 19, :end-column 17, :arglists (quote ([]))}, :name mim.core/mount-root, :variadic false, :file "src/cljs/mim/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, delayed-init {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/core.cljs", :line 24, :column 7, :end-line 24, :end-column 19, :arglists (quote ([]))}, :name mim.core/delayed-init, :variadic false, :file "src/cljs/mim/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/core.cljs", :line 29, :column 16, :end-line 29, :end-column 20, :export true, :arglists (quote ([]))}, :name mim.core/init, :variadic false, :file "src/cljs/mim/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:initialize-db}, :order [:initialize-db]}, :doc nil}