{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name mim.svg-anim, :imports nil, :requires {gstring goog.string, goog.string goog.string, goog.string.format goog.string.format}, :uses nil, :defs {log {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/svg_anim.cljs", :line 12, :column 7, :end-line 12, :end-column 10, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mim.svg-anim/log, :variadic true, :file "src/cljs/mim/svg_anim.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, velocity {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/svg_anim.cljs", :line 21, :column 7, :end-line 21, :end-column 15, :arglists (quote ([el & args])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(el args)], :arglists ([el & args]), :arglists-meta (nil)}}, :name mim.svg-anim/velocity, :variadic true, :file "src/cljs/mim/svg_anim.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(el args)], :arglists ([el & args]), :arglists-meta (nil)}, :method-params [(el args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists ([el & args])}, remove-elem-from-svg {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/svg_anim.cljs", :line 126, :column 7, :end-line 126, :end-column 27, :arglists (quote ([k]))}, :name mim.svg-anim/remove-elem-from-svg, :variadic false, :file "src/cljs/mim/svg_anim.cljs", :end-column 27, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, to-rad {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/svg_anim.cljs", :line 28, :column 7, :end-line 28, :end-column 13, :arglists (quote ([deg]))}, :name mim.svg-anim/to-rad, :variadic false, :file "src/cljs/mim/svg_anim.cljs", :end-column 13, :method-params ([deg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([deg]))}, get-elem {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/svg_anim.cljs", :line 54, :column 6, :end-line 54, :end-column 14}, :name mim.svg-anim/get-elem, :variadic false, :file "src/cljs/mim/svg_anim.cljs", :end-column 14, :method-params ([id]), :protocol-impl nil, :arglists-meta (), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists nil}, rotating-arcs-ui {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/svg_anim.cljs", :line 91, :column 7, :end-line 91, :end-column 23, :arglists (quote ([cx cy]))}, :name mim.svg-anim/rotating-arcs-ui, :variadic false, :file "src/cljs/mim/svg_anim.cljs", :end-column 23, :method-params ([cx cy]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cx cy]))}, circular-arc {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/svg_anim.cljs", :line 34, :column 7, :end-line 34, :end-column 19, :arglists (quote ([cx cy r th_1 th_2]))}, :name mim.svg-anim/circular-arc, :variadic false, :file "src/cljs/mim/svg_anim.cljs", :end-column 19, :method-params ([cx cy r th_1 th_2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 5, :fn-var true, :arglists (quote ([cx cy r th_1 th_2]))}, fresh-key {:name mim.svg-anim/fresh-key, :file "src/cljs/mim/svg_anim.cljs", :line 66, :column 1, :end-line 66, :end-column 15, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/svg_anim.cljs", :line 66, :column 6, :end-line 66, :end-column 15}}, set-ui {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/svg_anim.cljs", :line 16, :column 7, :end-line 16, :end-column 13, :arglists (quote ([msg]))}, :name mim.svg-anim/set-ui, :variadic false, :file "src/cljs/mim/svg_anim.cljs", :end-column 13, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, rotating-arc {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/svg_anim.cljs", :line 68, :column 7, :end-line 68, :end-column 19, :arglists (quote ([speed dir & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(speed dir args)], :arglists ([speed dir & args]), :arglists-meta (nil)}}, :name mim.svg-anim/rotating-arc, :variadic true, :file "src/cljs/mim/svg_anim.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(speed dir args)], :arglists ([speed dir & args]), :arglists-meta (nil)}, :method-params [(speed dir args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists ([speed dir & args])}, set-elem {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/svg_anim.cljs", :line 57, :column 7, :end-line 57, :end-column 15, :arglists (quote ([id v]))}, :name mim.svg-anim/set-elem, :variadic false, :file "src/cljs/mim/svg_anim.cljs", :end-column 15, :method-params ([id v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id v]))}, elem-lib {:name mim.svg-anim/elem-lib, :file "src/cljs/mim/svg_anim.cljs", :line 53, :column 1, :end-line 53, :end-column 14, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/svg_anim.cljs", :line 53, :column 6, :end-line 53, :end-column 14}}, svgns {:name mim.svg-anim/svgns, :file "src/cljs/mim/svg_anim.cljs", :line 32, :column 1, :end-line 32, :end-column 11, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/svg_anim.cljs", :line 32, :column 6, :end-line 32, :end-column 11}}, add-elems-to-svg {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/svg_anim.cljs", :line 116, :column 7, :end-line 116, :end-column 23, :arglists (quote ([svg k elems]))}, :name mim.svg-anim/add-elems-to-svg, :variadic false, :file "src/cljs/mim/svg_anim.cljs", :end-column 23, :method-params ([svg k elems]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 3, :fn-var true, :arglists (quote ([svg k elems]))}, -remove-element {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/svg_anim.cljs", :line 121, :column 7, :end-line 121, :end-column 22, :arglists (quote ([element]))}, :name mim.svg-anim/-remove-element, :variadic false, :file "src/cljs/mim/svg_anim.cljs", :end-column 22, :method-params ([element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([element]))}, get-key-generator {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/svg_anim.cljs", :line 60, :column 7, :end-line 60, :end-column 24, :arglists (quote ([]))}, :name mim.svg-anim/get-key-generator, :variadic false, :file "src/cljs/mim/svg_anim.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:rotateY :duration :elem :interval :rotateZ}, :order [:rotateY :duration :rotateZ :interval :elem]}, :doc nil}