{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name mim.touch-stuff, :imports nil, :requires {anim mim.svg-anim, mim.svg-anim mim.svg-anim}, :uses nil, :defs {get-touch-loc {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/touch_stuff.cljs", :line 61, :column 7, :end-line 61, :end-column 20, :arglists (quote ([touch]))}, :name mim.touch-stuff/get-touch-loc, :variadic false, :file "src/cljs/mim/touch_stuff.cljs", :end-column 20, :method-params ([touch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([touch]))}, make-circle-path {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/touch_stuff.cljs", :line 33, :column 7, :end-line 33, :end-column 23, :arglists (quote ([x y r]))}, :name mim.touch-stuff/make-circle-path, :variadic false, :file "src/cljs/mim/touch_stuff.cljs", :end-column 23, :method-params ([x y r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y r]))}, log {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/touch_stuff.cljs", :line 9, :column 7, :end-line 9, :end-column 10, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mim.touch-stuff/log, :variadic true, :file "src/cljs/mim/touch_stuff.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, make-canvas-circle {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/touch_stuff.cljs", :line 36, :column 7, :end-line 36, :end-column 25, :arglists (quote ([svg [x y]]))}, :name mim.touch-stuff/make-canvas-circle, :variadic false, :file "src/cljs/mim/touch_stuff.cljs", :end-column 25, :method-params ([svg p__29895]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([svg [x y]]))}, my-svg {:name mim.touch-stuff/my-svg, :file "src/cljs/mim/touch_stuff.cljs", :line 18, :column 1, :end-line 18, :end-column 12, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/touch_stuff.cljs", :line 18, :column 6, :end-line 18, :end-column 12}}, touch-end-handler {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/touch_stuff.cljs", :line 77, :column 7, :end-line 77, :end-column 24, :arglists (quote ([evt]))}, :name mim.touch-stuff/touch-end-handler, :variadic false, :file "src/cljs/mim/touch_stuff.cljs", :end-column 24, :method-params ([evt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([evt]))}, set-ui {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/touch_stuff.cljs", :line 13, :column 7, :end-line 13, :end-column 13, :arglists (quote ([msg]))}, :name mim.touch-stuff/set-ui, :variadic false, :file "src/cljs/mim/touch_stuff.cljs", :end-column 13, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, my-svg-container {:name mim.touch-stuff/my-svg-container, :file "src/cljs/mim/touch_stuff.cljs", :line 19, :column 1, :end-line 19, :end-column 22, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/touch_stuff.cljs", :line 19, :column 6, :end-line 19, :end-column 22}}, get-canvas-offsets {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/touch_stuff.cljs", :line 55, :column 7, :end-line 55, :end-column 25, :arglists (quote ([]))}, :name mim.touch-stuff/get-canvas-offsets, :variadic false, :file "src/cljs/mim/touch_stuff.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, svgns {:name mim.touch-stuff/svgns, :file "src/cljs/mim/touch_stuff.cljs", :line 31, :column 1, :end-line 31, :end-column 11, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/touch_stuff.cljs", :line 31, :column 6, :end-line 31, :end-column 11}}, my-svg-elems {:name mim.touch-stuff/my-svg-elems, :file "src/cljs/mim/touch_stuff.cljs", :line 20, :column 1, :end-line 20, :end-column 18, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/touch_stuff.cljs", :line 20, :column 6, :end-line 20, :end-column 18}}, init-canvas {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/touch_stuff.cljs", :line 83, :column 7, :end-line 83, :end-column 18, :arglists (quote ([]))}, :name mim.touch-stuff/init-canvas, :variadic false, :file "src/cljs/mim/touch_stuff.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, touch-handler {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/touch_stuff.cljs", :line 66, :column 7, :end-line 66, :end-column 20, :arglists (quote ([evt]))}, :name mim.touch-stuff/touch-handler, :variadic false, :file "src/cljs/mim/touch_stuff.cljs", :end-column 20, :method-params ([evt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([evt]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:rotation}, :order [:rotation]}, :doc nil}