{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name mim.ws, :imports nil, :requires nil, :uses nil, :defs {set-ui {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/ws.cljs", :line 4, :column 7, :end-line 4, :end-column 13, :arglists (quote ([msg]))}, :name mim.ws/set-ui, :variadic false, :file "src/cljs/mim/ws.cljs", :end-column 13, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, ws-chan {:name mim.ws/ws-chan, :file "src/cljs/mim/ws.cljs", :line 10, :column 1, :end-line 10, :end-column 13, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/ws.cljs", :line 10, :column 6, :end-line 10, :end-column 13}}, receive-msg! {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/ws.cljs", :line 12, :column 7, :end-line 12, :end-column 19, :arglists (quote ([update-fn]))}, :name mim.ws/receive-msg!, :variadic false, :file "src/cljs/mim/ws.cljs", :end-column 19, :method-params ([update-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([update-fn]))}, send-msg! {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/ws.cljs", :line 18, :column 7, :end-line 18, :end-column 16, :arglists (quote ([msg]))}, :name mim.ws/send-msg!, :variadic false, :file "src/cljs/mim/ws.cljs", :end-column 16, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, log {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/ws.cljs", :line 25, :column 7, :end-line 25, :end-column 10, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mim.ws/log, :variadic true, :file "src/cljs/mim/ws.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, receive-handler {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/ws.cljs", :line 31, :column 7, :end-line 31, :end-column 22, :arglists (quote ([stuff]))}, :name mim.ws/receive-handler, :variadic false, :file "src/cljs/mim/ws.cljs", :end-column 22, :method-params ([stuff]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([stuff]))}, make-websocket! {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/ws.cljs", :line 42, :column 7, :end-line 42, :end-column 22, :arglists (quote ([url receive-handler]))}, :name mim.ws/make-websocket!, :variadic false, :file "src/cljs/mim/ws.cljs", :end-column 22, :method-params ([url receive-handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url receive-handler]))}, ws-ip-port {:name mim.ws/ws-ip-port, :file "src/cljs/mim/ws.cljs", :line 53, :column 1, :end-line 53, :end-column 16, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/ws.cljs", :line 53, :column 6, :end-line 53, :end-column 16}}, start-ws {:protocol-inline nil, :meta {:file "/Users/oluwa/dev/usmle_app/src/cljs/mim/ws.cljs", :line 55, :column 7, :end-line 55, :end-column 15, :arglists (quote ([]))}, :name mim.ws/start-ws, :variadic false, :file "src/cljs/mim/ws.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:type :debug}, :order [:type :debug]}, :doc nil}